@inherits ComponentBase<Nothing.Nauta.App.ViewModels.Components.AccountViewModel>

@if (ViewModel is null)
{
    return;
}

<MudPaper Class="pa-4">
    <MudStack>
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexStart">
                <MudIcon Icon="@Icons.Material.Filled.AccountCircle" Size="Size.Small"/>
                <MudText Typo="Typo.subtitle1"  Color="Color.Dark">User Name</MudText>
            </MudStack>
            <MudText Typo="Typo.body1">@ViewModel.AccountInfo.Username</MudText>
        </MudStack>
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexStart">
                <MudIcon Icon="@Icons.Material.Filled.Domain" Size="Size.Small"/>
                <MudText Typo="Typo.subtitle1" Color="Color.Dark">Account Type</MudText>
            </MudStack>
            <MudText Typo="Typo.body1">@ViewModel.AccountInfo.AccountType</MudText>
        </MudStack>
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexStart">
                <MudIcon Icon="@Icons.Material.Filled.Alarm" Size="Size.Small"/>
                <MudText Typo="Typo.subtitle1" Color="Color.Dark">Remaining Time</MudText>
            </MudStack>
            <MudProgressLinear Style="width: 150px; height: 25px" Color="@ViewModel.RemainingTimeProgressBarColor" Size="Size.Large" Rounded="true" Value="@ViewModel.RemainingTimePercent">
                <MudText Typo="Typo.subtitle1" Color="Color.Dark">
                    @ViewModel.FormattedRemainingTime
                </MudText>
            </MudProgressLinear>
        </MudStack>
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexStart">
                <MudIcon Icon="@Icons.Material.Filled.PlayCircle" Size="Size.Small"/>
                <MudText Typo="Typo.subtitle1" Color="Color.Dark">Options</MudText>
            </MudStack>
            <MudButtonGroup Variant="Variant.Text" Size="Size.Medium">
                <MudToggleIconButton Size="Size.Large" ToggledSize="Size.Large" Disabled="@ViewModel.IsSwitchDisabled" Toggled="@ViewModel.IsConnected" Icon="@Icons.Material.Filled.SignalWifiOff" Color="@Color.Error" Title="Off" ToggledIcon="@Icons.Material.Filled.SignalWifiStatusbar4Bar" ToggledColor="@Color.Success" ToggledTitle="On" ToggledChanged=@(async () => await ViewModel.ToggleConnectionStatusAsync())/>
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Disabled="@ViewModel.IsEditDisabled" Color="Color.Primary" Size="Size.Medium" OnClick=@(async () => await ViewModel.EditAsync())/>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Disabled="@ViewModel.IsDeleteDisable" Color="Color.Error" Size="Size.Medium" OnClick=@(async () => await ViewModel.DeleteAsync())/>
            </MudButtonGroup>
     </MudStack>
    </MudStack>
</MudPaper>

