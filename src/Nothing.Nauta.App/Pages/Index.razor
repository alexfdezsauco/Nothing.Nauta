@page "/"

<PageTitle>Index</PageTitle>

<MudGrid Justify="Justify.SpaceBetween">
    <MudItem><MudText Typo="Typo.h5" Color="Color.Primary" Style="margin-bottom: 20px">Accounts</MudText></MudItem>
    <MudItem><MudIconButton Icon="@Icons.Material.Filled.Refresh" Color="Color.Primary" Size="Size.Large" OnClick="ReloadAsync" /></MudItem>
    <MudItem><MudIconButton Icon="@Icons.Material.Filled.AddCircle" Color="Color.Primary" Size="Size.Large" OnClick="AddAccountAsync" /></MudItem>
</MudGrid>

@if (_accounts is not null && _accounts.Count > 0)
{
    <MudTable Items="@_accounts" Hover="true" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Username</MudTh>
            <MudTh>Account Type</MudTh>
            <MudTh>Remaining Time</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="User name">@context.AccountInfo.Username</MudTd>
            <MudTd DataLabel="Account Type">@context.AccountInfo.AccountType</MudTd>
            <MudTd DataLabel="Remaining Time">@context.RemainingTime</MudTd>
            <MudTd DataLabel="Actions">
                <MudSwitch T="bool" Size="Size.Large" Disabled="@IsDisable(context)" Checked="@context.IsConnected" Color="Color.Primary" CheckedChanged=@(async () => await CheckedChangedAsync(context))/>
                <MudButton StartIcon="@Icons.Material.Filled.Edit" Color="Color.Primary" Size="Size.Large" OnClick=@(async () => await EditAsync(context))/>
                <MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" Size="Size.Large" OnClick=@(async () => await DeleteAsync(context))/>
            </MudTd>
        </RowTemplate>
    </MudTable>

    <MudButton StartIcon="@Icons.Material.Filled.ClearAll" Color="Color.Dark" Size="Size.Large" FullWidth="true" OnClick=@(async () => await ClearAsync())>Manual Reset</MudButton>
}
else
{
    <MudAlert Severity="Severity.Normal">Add a new account</MudAlert>
}